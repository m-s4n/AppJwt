<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="c:\temp\internal-nlog-AspNetCore.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>
		<!-- File Target for all log messages with basic details -->
		<target xsi:type="File" name="allfile" fileName="c:\temp\nlog-AspNetCore-all-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" />

		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<target xsi:type="File" name="ownFile-web" fileName="c:\temp\nlog-AspNetCore-own-${shortdate}.log"
				layout="
				callsite : ${callsite} |
				logger: ${logger:upperCase=true} |
				request host: ${aspnet-Request-Host} |
				request ip : ${aspnet-Request-Ip} |
				request header: ${aspnet-request} |
				request body: ${aspnet-request-posted-body} |
				request-url : ${aspnet-request-url} |
				request -headers: ${aspnet-request-headers} |
				data : ${aspnet-request-posted-body} |
				user : ${aspnet-user-claim:user_name} |
				email : ${aspnet-user-claim:email}  |
				audience: ${aspnet-user-claim:aud} |
				user_id : ${aspnet-user-claim:user_id} |
				iss : ${aspnet-user-claim:iss} 
				" />

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />

		<!-- Database logs -->
		<target name="database" xsi:type="Database" dbProvider="Npgsql.NpgsqlConnection, Npgsql">
			<connectionString>
				Server=127.0.0.1;Port=5432;Database=dblog;Userid=***;Password=***;Pooling=true;MinPoolSize=1;MaxPoolSize=20;ConnectionLifeTime=15;
			</connectionString>
			<commandText>
				insert into logs
				(machine_name, level, mesaj, logger)
				values
				(@MachineName, @Level, @Message, @Logger);
			</commandText>

			<parameter name="@MachineName" layout="${machinename}" />
			<parameter name="@Level" layout="${level:upperCase=true}" />
			<parameter name="@Message" layout="${message}" />
			<parameter name="@Logger" layout="${logger}" />
		</target>
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Info" writeTo="allfile" />

		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web" final="true" />

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />

		<logger name="*" minlevel="Info" writeTo="ownFile-web" />
		<logger name="*" minlevel="Info" writeTo="database" />
	</rules>
</nlog>